name: "Build Exectables for wrfplot"
# This workflow is triggered on pushes to the repository.
on: [push]

jobs:
  build-linux:
    name: Building Linux binary
    runs-on: ubuntu-20.04

    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Setting up Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-activate-base: true
          activate-environment: ""
          auto-update-conda: true
      - name: Install Linux Dependencies
        shell: bash -l {0}
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          sudo apt-get update
          sudo apt-get install patchelf gdb ccache patchelf makeself libfuse2 build-essential gcc-7 -y
      - name: Install wrfplot conda environment
        shell: bash -l {0}
        run: |
          conda env create -f environment.yml
      - name: Building Linux Executable
        shell: bash -l {0}
        run: |
          conda activate wrfplot
          export CC=gcc-7
          python build_exe.py
  build-windows:
    name: Building Windows setup file
    runs-on: windows-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: Download EnVar plugin for NSIS
        uses: carlosperate/download-file-action@v1.0.3
        with:
          file-url: https://nsis.sourceforge.io/mediawiki/images/7/7f/EnVar_plugin.zip
          file-name: envar_plugin.zip
          location: ${{ github.workspace }}
      - name: Extract EnVar plugin
        run: 7z x "${{ github.workspace }}/envar_plugin.zip" -o"C:\Program Files (x86)\NSIS"
        if: matrix.os == 'windows-latest'
      - name: Install wrfplot conda environment on Windows
        shell: pwsh
        run: |
          conda env create -f environment.yml
      - name: Building Windows Executable
        shell: pwsh
        run: |
          conda activate wrfplot
          python build_exe.py
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Generate Changelog from HISTORY file
        run: sed -n '/v0/,/^$/{/^$/q;p;}' HISTORY.rst > ${{ github.workspace }}-CHANGELOG.txt
      - name: Release Process
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body_path: ${{ github.workspace }}-CHANGELOG.txt
          files: |
            build/linux/wrfplot-linux-64bit.run
            build/windows/wrfplot-windows-64bit.exe
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
        env:
          GITHUB_REPOSITORY: wxguy/wrfplot
